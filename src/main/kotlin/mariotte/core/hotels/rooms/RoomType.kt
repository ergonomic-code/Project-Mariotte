package pro.azhidkov.mariotte.core.hotels.rooms

import com.fasterxml.jackson.annotation.JsonValue


/**
 * Объект-значение-перечисления "Тип номера".
 * Часть сущности "Номер".
 *
 * * Слой в Функциональной архитектуре: чистое ядро
 * * Тип блока в структурном дизайне: н/а
 * * Слой в чистой архитектуре: сущности
 * * Тип блока в Эргономичной архитектуре: запись ресурса
 *
 * В данном случае, я делаю наивное предположение, что в мире есть стандартизированный набор типов номеров
 * и нет необходимости обеспечить пользователям возможность меня состав значений этого перечисления
 *
 * Метки в коде:
 * 1. Эта аннотация приводит к тому, что jackson (де)серелизует поля типа RoomType в виде числа с идентификатором,
 *    а не строки с названием варианта перечисления.
 *    Это в свою очередь, повышает "эволюционированность" API - в моей практике были прецеденты, когда
 *    бизнес менял состав и имена вариантов перечисления, а они фигурировали в API и мне пришлось
 *    приложить титанические усилия для того, чтобы оставить код синхронизованным с языком бизнеса и
 *    при этом не сломать обратную совместимость.
 */
enum class RoomType(
    @JsonValue // 1
    val id: Int
) {

    LUX(1),
    SEMI_LUX(2);

}